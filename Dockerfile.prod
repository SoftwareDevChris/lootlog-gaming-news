FROM node:18-alpine AS base


FROM base AS deps
RUN apk add --no-cache libc6-compat

WORKDIR /app


# Install dependencies
COPY ../package.json ./
RUN npm install

# ------------------------------------------------------
# Rebuild source code only when needed
FROM deps AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY ../ .
ENV NEXT_TELEMETRY_DISABLED 1

RUN npx prisma generate
RUN npm run build

# ------------------------------------------------------
# Production image, copy all the files and run next
FROM base AS runner
WORKDIR /app

ENV NODE_ENV production

RUN addgroup -g 1001 -S nodejs
RUN adduser -S nextjs -u 1001

COPY --from=builder /app/public ./public

# Automatically leverage output traces to reduce image size
# https://nextjs.org/docs/advanced-features/output-file-tracing
# COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
# COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static

USER nextjs

EXPOSE 3000

ENV PORT 3000
ENV HOSTNAME localhost

RUN npm install

RUN npm run build

RUN npx prisma migrate deploy

CMD [ "npm", "start" ]